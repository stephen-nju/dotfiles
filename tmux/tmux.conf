# force a reload of the config file
unbind-key r
bind-key r source-file ~/.tmux.conf \; display "tmux configuration reloaded !!"

# Force tmux to use utf-8
setw -gq utf8 on

#--------------------------------------------------------------------------------
# General
#--------------------------------------------------------------------------------

set-option -g default-terminal "screen-256color"

# Tell tmux that outside terminal supports true colour
set-option -sa terminal-overrides ",xterm-256color:RGB"


# Use xterm sequences
set-window-option -g xterm-keys on

# 1 based index for windows 
set -g base-index 1

# No delay for escape key press, otherwise vim Esc slows down
set -s escape-time 0

# increase repeat timeout
set -sg repeat-time 600

# disable various messages
set -s focus-events on

# expect UTF-8 (tmux < 2.2)
set -q -g status-utf8 on
setw -q -g utf8 on

# boost history
set -g history-limit 100000

#--------------------------------------------------------------------------------
# Display
#--------------------------------------------------------------------------------

# 1 based index for windows
set -g base-index 1

# make pane numbering consistent with windows
setw -g pane-base-index 1

# Aggressive resize makes tmux resize if a smaller client is active
setw -g aggressive-resize on

# Info
set -g set-titles on                        # set terminal title
set -g set-titles-string '#h ❐ #S ● #I #W'

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 60     # redraw status line every 10 seconds
set -g status-left-length 15
#set -g status-justify centre

# notify us of any activity in other windows
set -g monitor-activity on
set -g visual-activity off

# Disable auto renaming of windows
set -g allow-rename off

# Enable mouse support.
set -g mouse on

# enable vi keys
setw -g mode-keys vi
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h  if-shell  "$is_vim"  "send-keys C-h"  "select-pane -L"
bind-key -n C-j   if-shell  "$is_vim"  "send-keys C-j"   "select-pane -D"
bind-key -n C-k  if-shell  "$is_vim"  "send-keys C-k"  "select-pane -U"
bind-key -n C-l   if-shell  "$is_vim"  "send-keys C-l"   "select-pane -R"
#--------------------------------------------------------------------------------
# Navigation
#--------------------------------------------------------------------------------

# Vertical and horizontal splitting
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

# Home row movement between panes (without prefix).
bind-key -n C-M-j select-pane -D
bind-key -n C-M-k select-pane -U
bind-key -n C-M-h select-pane -L
bind-key -n C-M-l select-pane -R

# quick pane cycling
unbind-key ^A
bind-key ^A select-pane -t :.+

# Home row movement between windows (with prefix).
bind-key -r C-h previous-window
bind-key -r C-l next-window

# Go to last window (with prefix).
bind-key -r C-a last-window

# Moving panes (without prefix).
bind-key -n C-M-Up    rotate-window -U      # rotate window 'up' (moves all panes).
bind-key -n C-M-Down  rotate-window -D      # rotate window 'down' (moves all panes).
bind-key -n C-M-Left  swap-pane -dU         # Swap with the previous pane.
bind-key -n C-M-Right swap-pane -dD         # Swap with the next pane.

# C-b ! => Move the current pane into a new separate window (break pane).

# Moving windows
bind-key -r < swap-window -t -1
bind-key -r > swap-window -t +1

# Resizing Panes using home row keys
bind-key -r M-Left resize-pane -L 10
bind-key -r M-Right resize-pane -D 10
bind-key -r M-Up resize-pane -U 10
bind-key -r M-Down resize-pane -R 10

# Resizing Panes using arrow keys.
bind-key -r M-Left resize-pane -L 7
bind-key -r M-Right resize-pane -R 7
bind-key -r M-Up resize-pane -U 7
bind-key -r M-Down resize-pane -D 7

# copy and paste with system clipboard using xclip
bind-key C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind-key C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

#--------------------------------------------------------------------------------
# Themes
#--------------------------------------------------------------------------------



set -g status-justify "centre"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=colour237,bg=colour109"
set -g status-right-style "none"
set -g pane-active-border-style "fg=colour109"
set -g status-style "none,bg=colour237"
set -g message-style "fg=colour237,bg=colour109"
set -g pane-border-style "fg=colour236"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-style "underscore,fg=colour109,bg=colour237"
setw -g window-status-separator ""
setw -g window-status-style "none,fg=colour109,bg=colour237"
set -g status-left "#[fg=colour237,bg=colour109] #S #[fg=colour109,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour109,bg=colour236] #I #[fg=colour236,bg=colour237,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour237,bg=colour237,nobold,nounderscore,noitalics]#[fg=colour240,bg=colour237] #(uptime | cut -d \" \" -f 3,4,5) #[fg=colour236,bg=colour237,nobold,nounderscore,noitalics]#[fg=colour109,bg=colour236] %R  %a  %b  %d #[fg=colour109,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour237,bg=colour109] #(whoami)  #H "
setw -g window-status-format "#[fg=colour237,bg=colour237,nobold,nounderscore,noitalics]#[default] #I  #W #[fg=colour237,bg=colour237,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=colour237,bg=colour109,nobold,nounderscore,noitalics]#[fg=colour237,bg=colour109] #I  #W  #F #[fg=colour109,bg=colour237,nobold,nounderscore,noitalics]"










#--------------------------------------------------------------------------------
# List of plugins (via tmux-plugin-manager which must be cloned manually)
#
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-logging'

# Plugin speicifc options

# tmux-resurrect options
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-dir '$HOME/.tmux/resurrect/$HOSTNAME'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

# tmux-continuum options
set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (must be at the botton of this file)
run '~/.tmux/plugins/tpm/tpm'
